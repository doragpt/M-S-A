以下、統合ダッシュボードにすべてのデータが表示されなくなった原因と、その修正指示についてまとめました。

---

### 1. タイムスタンプ形式の問題

- **原因:**  
  `page_helper.py`でタイムスタンプの形式を変更し、現状は例として `"2025-03-13 18:30:00 JST+0900"` のような形式になっています。この形式は JavaScript の `new Date()` で正しく解析できず、結果として各グラフ（店舗履歴グラフや時間帯別分析）の描画処理が失敗している可能性があります。

- **修正指示:**  
  - **バックエンド側（page_helper.py）:**  
    タイムスタンプを ISO8601 形式に変更してください。例えば、`timestamp.isoformat()` を利用し、`"YYYY-MM-DDTHH:MM:SS+09:00"` のような形式にするか、strftime を用いて適切な形式に変換する。  
    例:  
    ```python
    formatted_timestamp = timestamp.strftime('%Y-%m-%dT%H:%M:%S%z')
    ```
  - **フロントエンド側:**  
    もしバックエンド側の変更が困難な場合、JavaScript 側でタイムスタンプ文字列から不要な部分（例： `" JST"`）を除去し、`new Date()` で正しくパースできるようにする処理を追加してください。

---

### 2. 業種内ジャンルランキング API の実装

- **原因:**  
  業種内ジャンルランキング用のバックエンド API を追加したとのことですが、ルートの定義やデータ取得処理に不備がある可能性があります。たとえば、フロントエンドで呼び出している API URL（例：`/api/ranking/genre`）が正しく実装されていない、または呼び出し時にエラーが発生していると、該当部分のデータが表示されません。

- **修正指示:**  
  - **app.py でのルート定義:**  
    業種内ジャンルランキング用の API ルートを追加し、リクエストパラメータ（例：`biz_type`）に基づいて、ジャンルごとの店舗数・平均稼働率などのランキングデータを返す処理を実装してください。  
    例:  
    ```python
    @app.route('/api/ranking/genre')
    def api_genre_ranking():
        biz_type = request.args.get('biz_type')
        with db.engine.connect() as conn:
            results = AggregatedData.calculate_genre_ranking(conn, biz_type)
        data = [
            {"genre": r['genre'], "store_count": r['store_count'], "avg_rate": round(r['avg_rate'], 1)}
            for r in results
        ]
        return jsonify(data)
    ```
  - **フロントエンドとの連携:**  
    フロントエンド（integrated_dashboard.html）側で、この API を呼び出す処理が正しく記述されているか確認してください。API 呼び出しの URL やパラメータ、エラーハンドリングに誤りがないか検証し、必要に応じて修正してください。

---

### 3. 統合ダッシュボード（integrated_dashboard.html）のフロントエンド実装

- **原因:**  
  各機能（平均稼働ランキング、店舗履歴グラフ、時間帯別分析、業種内ジャンルランキング）の表示ロジックを統合ダッシュボードに実装した際、API 呼び出しや描画処理の修正によって、どれかの部分で例外が発生していると、全体の描画がブロックされる可能性があります。

- **修正指示:**  
  - 各機能ごとに、API 呼び出し（fetch など）の URL やパラメータが正しいか、レスポンスの JSON 構造が想定通りかを確認してください。  
  - エラー処理（`.catch()` など）で、1つのエラーが全体の処理を中断しないように、各処理は独立して動作するように実装してください。  
  - ブラウザのコンソールやネットワークタブでエラーや 404、500 エラーが発生していないかチェックし、各機能の実行状況を個別に検証してください。

---

### 4. 各機能ごとの個別検証

- **平均稼働ランキング:**  
  `/api/ranking/average` エンドポイントから取得したデータが正しいか確認。フロントエンドで取得した JSON を元にテーブルを正しく更新できているかチェックしてください。

- **店舗履歴グラフ（期間指定）:**  
  `/api/history` の呼び出し結果に含まれるタイムスタンプが ISO8601 形式により正しくパースされ、グラフの X 軸に正しい日時が表示されるか確認してください。

- **時間帯別分析:**  
  履歴データから各時間帯（0〜23時）のデータ集計が正しく行われ、Chart.js などのライブラリでグラフが描画されているか確認してください。タイムスタンプのパースエラーがないかがポイントです。

---

### 5. エラー処理の影響

- **原因:**  
  新たに追加したエラー処理が、API 呼び出しや描画処理でエラーが発生した際に、全体の表示をブロックしてしまっている可能性があります。

- **修正指示:**  
  - バックエンド、フロントエンドそれぞれのログ出力を確認し、どの処理でエラーが発生しているか特定してください。  
  - エラー発生時に、該当部分のみエラーメッセージを表示するか、もしくはデフォルトの空データを返すようにして、全体の表示に影響を与えないように調整してください。

---

### 結論

1. **タイムスタンプの形式を ISO8601 に統一**し、JavaScript 側で正しくパースできるようにする。  
2. **業種内ジャンルランキング API**が正しく実装され、フロントエンドの呼び出しと整合性が取れているか確認する。  
3. **統合ダッシュボードの各機能**（平均稼働ランキング、店舗履歴グラフ、時間帯別分析）の API 呼び出し・描画処理を個別に検証し、エラーが一部の機能だけでなく全体の表示に影響を及ぼさないようエラーハンドリングを見直す。

これらの点を順次確認・修正していただくことで、統合ダッシュボード上にすべてのデータが正しく表示されるようになるはずです。