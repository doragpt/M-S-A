SyntaxError
File "/root/M-S-A/page_helper.py", line 91
    }
    ^
SyntaxError: unmatched '}'

Traceback (most recent call last)
File "/root/M-S-A/venv/lib/python3.12/site-packages/flask/app.py", line 2088, in __call__
return self.wsgi_app(environ, start_response)
File "/root/M-S-A/venv/lib/python3.12/site-packages/flask_socketio/__init__.py", line 43, in __call__
return super(_SocketIOMiddleware, self).__call__(environ,
File "/root/M-S-A/venv/lib/python3.12/site-packages/engineio/middleware.py", line 74, in __call__
return self.wsgi_app(environ, start_response)
File "/root/M-S-A/venv/lib/python3.12/site-packages/flask/app.py", line 2073, in wsgi_app
response = self.handle_exception(e)
File "/root/M-S-A/venv/lib/python3.12/site-packages/flask/app.py", line 2070, in wsgi_app
response = self.full_dispatch_request()
File "/root/M-S-A/venv/lib/python3.12/site-packages/flask/app.py", line 1515, in full_dispatch_request
rv = self.handle_user_exception(e)
File "/root/M-S-A/venv/lib/python3.12/site-packages/flask/app.py", line 1513, in full_dispatch_request
rv = self.dispatch_request()
File "/root/M-S-A/venv/lib/python3.12/site-packages/flask/app.py", line 1499, in dispatch_request
return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
File "/root/M-S-A/venv/lib/python3.12/site-packages/flask_caching/__init__.py", line 877, in decorated_function
rv = self._call_fn(f, *args, **kwargs)
File "/root/M-S-A/venv/lib/python3.12/site-packages/flask_caching/__init__.py", line 180, in _call_fn
return ensure_sync(fn)(*args, **kwargs)
File "/root/M-S-A/app.py", line 408, in api_data
from page_helper import paginate_query_results, format_store_status
File "/root/M-S-A/page_helper.py", line 91
    }
    ^
SyntaxError: unmatched '}'
The debugger caught an exception in your WSGI application. You can now look at the traceback which led to the error.
To switch between the interactive traceback and the plaintext one, you can click on the "Traceback" headline. From the text traceback you can also create a paste of it. For code execution mouse-over the frame you want to debug and click on the console icon on the right side.

You can execute arbitrary Python code in the stack frames and there are some extra helpers available for introspection:

dump() shows all variables in the frame
dump(obj) dumps all that's known about the object
Brought to you by DON'T PANIC, your friendly Werkzeug powered traceback interpreter.